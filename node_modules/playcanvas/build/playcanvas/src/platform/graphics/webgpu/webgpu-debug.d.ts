/**
 * Internal WebGPU debug system. Note that the functions only execute in the debug build, and are
 * stripped out in other builds.
 *
 * @ignore
 */
export class WebgpuDebug {
    static _scopes: any[];
    static _markers: any[];
    /** @type {Map<string,number>} */
    static _loggedMessages: Map<string, number>;
    /**
     * Start a validation error scope.
     *
     * @param {import('./webgpu-graphics-device.js').WebgpuGraphicsDevice} device - The graphics
     * device.
     */
    static validate(device: import('./webgpu-graphics-device.js').WebgpuGraphicsDevice): void;
    /**
     * Start an out-of-memory error scope.
     *
     * @param {import('./webgpu-graphics-device.js').WebgpuGraphicsDevice} device - The graphics
     * device.
     */
    static memory(device: import('./webgpu-graphics-device.js').WebgpuGraphicsDevice): void;
    /**
     * Start an internal error scope.
     *
     * @param {import('./webgpu-graphics-device.js').WebgpuGraphicsDevice} device - The graphics
     * device.
     */
    static internal(device: import('./webgpu-graphics-device.js').WebgpuGraphicsDevice): void;
    /**
     * End the previous error scope, and print errors if any.
     *
     * @param {import('./webgpu-graphics-device.js').WebgpuGraphicsDevice} device - The graphics
     * device.
     * @param {...any} args - Additional parameters that form the error message.
     */
    static end(device: import('./webgpu-graphics-device.js').WebgpuGraphicsDevice, ...args: any[]): void;
}
