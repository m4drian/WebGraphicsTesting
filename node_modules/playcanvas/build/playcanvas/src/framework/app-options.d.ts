/**
 * AppOptions is an object that holds configuration settings utilized in the creation of AppBase. It
 * allows functionality to be included or excluded from the AppBase instance.
 */
export class AppOptions {
    /**
     * Input handler for {@link ElementComponent}s.
     *
     * @type {import('./input/element-input.js').ElementInput}
     */
    elementInput: import('./input/element-input.js').ElementInput;
    /**
     * Keyboard handler for input.
     *
     * @type {import('../platform/input/keyboard.js').Keyboard}
     */
    keyboard: import('../platform/input/keyboard.js').Keyboard;
    /**
     * Mouse handler for input.
     *
     * @type {import('../platform/input/mouse.js').Mouse}
     */
    mouse: import('../platform/input/mouse.js').Mouse;
    /**
     * TouchDevice handler for input.
     *
     * @type {import('../platform/input/touch-device.js').TouchDevice}
     */
    touch: import('../platform/input/touch-device.js').TouchDevice;
    /**
     * Gamepad handler for input.
     *
     * @type {import('../platform/input/game-pads.js').GamePads}
     */
    gamepads: import('../platform/input/game-pads.js').GamePads;
    /**
     * Prefix to apply to script urls before loading.
     *
     * @type {string}
     */
    scriptPrefix: string;
    /**
     * Prefix to apply to asset urls before loading.
     *
     * @type {string}
     */
    assetPrefix: string;
    /**
     * Scripts in order of loading first.
     *
     * @type {string[]}
     */
    scriptsOrder: string[];
    /**
     * The sound manager
     *
     * @type {import('../platform/sound/manager.js').SoundManager}
     */
    soundManager: import('../platform/sound/manager.js').SoundManager;
    /**
     * The graphics device.
     *
     * @type {import('../platform/graphics/graphics-device.js').GraphicsDevice}
     */
    graphicsDevice: import('../platform/graphics/graphics-device.js').GraphicsDevice;
    /**
     * The lightmapper.
     *
     * @type {typeof import('./lightmapper/lightmapper.js').Lightmapper}
     */
    lightmapper: typeof import('./lightmapper/lightmapper.js').Lightmapper;
    /**
     * The BatchManager.
     *
     * @type {typeof import('../scene/batching/batch-manager.js').BatchManager}
     */
    batchManager: typeof import('../scene/batching/batch-manager.js').BatchManager;
    /**
     * The XrManager.
     *
     * @type {typeof import('./xr/xr-manager.js').XrManager}
     */
    xr: typeof import('./xr/xr-manager.js').XrManager;
    /**
     * The component systems the app requires.
     *
     * @type {typeof import('./components/system.js').ComponentSystem[]}
     */
    componentSystems: typeof import('./components/system.js').ComponentSystem[];
    /**
     * The resource handlers the app requires.
     *
     * @type {typeof import('./handlers/handler.js').ResourceHandler[]}
     */
    resourceHandlers: typeof import('./handlers/handler.js').ResourceHandler[];
}
