/**
 * Represents finger with related joints and index.
 *
 * @category XR
 */
export class XrFinger {
    /**
     * Create a new XrFinger instance.
     *
     * @param {number} index - Index of a finger.
     * @param {import('./xr-hand.js').XrHand} hand - Hand that finger relates to.
     * @ignore
     */
    constructor(index: number, hand: import('./xr-hand.js').XrHand);
    /**
     * @type {number}
     * @private
     */
    private _index;
    /**
     * @type {import('./xr-hand.js').XrHand}
     * @private
     */
    private _hand;
    /**
     * @type {import('./xr-joint.js').XrJoint[]}
     * @private
     */
    private _joints;
    /**
     * @type {import('./xr-joint.js').XrJoint|null}
     * @private
     */
    private _tip;
    /**
     * Index of a finger, numeration is: thumb, index, middle, ring, little.
     *
     * @type {number}
     */
    get index(): number;
    /**
     * Hand that finger relates to.
     *
     * @type {import('./xr-hand.js').XrHand}
     */
    get hand(): import("./xr-hand.js").XrHand;
    /**
     * List of joints that relates to this finger, starting from joint closest to wrist all the way
     * to the tip of a finger.
     *
     * @type {import('./xr-joint.js').XrJoint[]}
     */
    get joints(): import("./xr-joint.js").XrJoint[];
    /**
     * Tip of a finger, or null if not available.
     *
     * @type {import('./xr-joint.js').XrJoint|null}
     */
    get tip(): import("./xr-joint.js").XrJoint;
}
