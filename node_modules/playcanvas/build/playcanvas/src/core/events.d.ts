export namespace events {
    /**
     * Attach event methods 'on', 'off', 'fire', 'once' and 'hasEvent' to the target object.
     *
     * @param {object} target - The object to add events to.
     * @returns {object} The target object.
     * @example
     * const obj = { };
     * pc.events.attach(obj);
     * @ignore
     */
    function attach(target: any): any;
    let _addCallback: (name: string, callback: import("./event-handler.js").HandleEventCallback, scope: any, once: boolean) => import("./event-handle.js").EventHandle;
    let on: (name: string, callback: import("./event-handler.js").HandleEventCallback, scope?: any) => import("./event-handle.js").EventHandle;
    let off: (name?: string, callback?: import("./event-handler.js").HandleEventCallback, scope?: any) => EventHandler;
    let fire: (name: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any, arg6?: any, arg7?: any, arg8?: any) => EventHandler;
    let once: (name: string, callback: import("./event-handler.js").HandleEventCallback, scope?: any) => import("./event-handle.js").EventHandle;
    let hasEvent: (name: string) => boolean;
}
import { EventHandler } from './event-handler.js';
