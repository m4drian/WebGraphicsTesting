/**
 * Translation gizmo.
 *
 * @category Gizmo
 */
export class TranslateGizmo extends TransformGizmo {
    _shapes: {
        yz: AxisPlane;
        xz: AxisPlane;
        xy: AxisPlane;
        x: AxisArrow;
        y: AxisArrow;
        z: AxisArrow;
    };
    /**
     * Internal mapping from each attached node to their starting position in local space.
     *
     * @type {Map<import('../../scene/graph-node.js').GraphNode, Vec3>}
     * @private
     */
    private _nodeLocalPositions;
    /**
     * Internal mapping from each attached node to their starting position in world space.
     *
     * @type {Map<import('../../scene/graph-node.js').GraphNode, Vec3>}
     * @private
     */
    private _nodePositions;
    /**
     * Axis gap.
     *
     * @type {number}
     */
    set axisGap(value: number);
    get axisGap(): number;
    /**
     * Axis line thickness.
     *
     * @type {number}
     */
    set axisLineThickness(value: number);
    get axisLineThickness(): number;
    /**
     * Axis line length.
     *
     * @type {number}
     */
    set axisLineLength(value: number);
    get axisLineLength(): number;
    /**
     * Axis line tolerance.
     *
     * @type {number}
     */
    set axisLineTolerance(value: number);
    get axisLineTolerance(): number;
    /**
     * Arrow thickness.
     *
     * @type {number}
     */
    set axisArrowThickness(value: number);
    get axisArrowThickness(): number;
    /**
     * Arrow length.
     *
     * @type {number}
     */
    set axisArrowLength(value: number);
    get axisArrowLength(): number;
    /**
     * Plane size.
     *
     * @type {number}
     */
    set axisPlaneSize(value: number);
    get axisPlaneSize(): number;
    /**
     * Plane gap.
     *
     * @type {number}
     */
    set axisPlaneGap(value: number);
    get axisPlaneGap(): number;
    _setArrowProp(prop: any, value: any): void;
    _setPlaneProp(prop: any, value: any): void;
    _storeNodePositions(): void;
    _setNodePositions(pointDelta: any): void;
    _screenToPoint(x: any, y: any): {
        point: Vec3;
        angle: number;
    };
}
import { TransformGizmo } from "./transform-gizmo.js";
import { AxisPlane } from './axis-shapes.js';
import { AxisArrow } from './axis-shapes.js';
import { Vec3 } from '../../core/math/vec3.js';
