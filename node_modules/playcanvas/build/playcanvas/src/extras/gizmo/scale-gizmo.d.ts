/**
 * Scaling gizmo.
 *
 * @category Gizmo
 */
export class ScaleGizmo extends TransformGizmo {
    _shapes: {
        xyz: AxisBoxCenter;
        yz: AxisPlane;
        xz: AxisPlane;
        xy: AxisPlane;
        x: AxisBoxLine;
        y: AxisBoxLine;
        z: AxisBoxLine;
    };
    /**
     * Internal mapping from each attached node to their starting scale.
     *
     * @type {Map<import('../../scene/graph-node.js').GraphNode, Vec3>}
     * @private
     */
    private _nodeScales;
    /**
     * Internal state if transform should use uniform scaling.
     *
     * @type {boolean}
     * @protected
     */
    protected _useUniformScaling: boolean;
    /**
     * Uniform scaling state for planes.
     *
     * @type {boolean}
     */
    set uniform(value: boolean);
    get uniform(): boolean;
    /**
     * Axis gap.
     *
     * @type {number}
     */
    set axisGap(value: number);
    get axisGap(): number;
    /**
     * Axis line thickness.
     *
     * @type {number}
     */
    set axisLineThickness(value: number);
    get axisLineThickness(): number;
    /**
     * Axis line length.
     *
     * @type {number}
     */
    set axisLineLength(value: number);
    get axisLineLength(): number;
    /**
     * Axis line tolerance.
     *
     * @type {number}
     */
    set axisLineTolerance(value: number);
    get axisLineTolerance(): number;
    /**
     * Axis box size.
     *
     * @type {number}
     */
    set axisBoxSize(value: number);
    get axisBoxSize(): number;
    /**
     * Plane size.
     *
     * @type {number}
     */
    set axisPlaneSize(value: number);
    get axisPlaneSize(): number;
    /**
     * Plane gap.
     *
     * @type {number}
     */
    set axisPlaneGap(value: number);
    get axisPlaneGap(): number;
    /**
     * Axis center size.
     *
     * @type {number}
     */
    set axisCenterSize(value: number);
    get axisCenterSize(): number;
    /**
     * Axis center tolerance.
     *
     * @type {number}
     */
    set axisCenterTolerance(value: number);
    get axisCenterTolerance(): number;
    _setArrowProp(prop: any, value: any): void;
    _setPlaneProp(prop: any, value: any): void;
    _storeNodeScales(): void;
    _setNodeScales(pointDelta: any): void;
    _screenToPoint(x: any, y: any): {
        point: Vec3;
        angle: number;
    };
}
import { TransformGizmo } from "./transform-gizmo.js";
import { AxisBoxCenter } from './axis-shapes.js';
import { AxisPlane } from './axis-shapes.js';
import { AxisBoxLine } from './axis-shapes.js';
import { Vec3 } from '../../core/math/vec3.js';
