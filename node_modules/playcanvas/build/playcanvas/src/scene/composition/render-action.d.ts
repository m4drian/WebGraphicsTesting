/**
 * Class representing an entry in the final order of rendering of cameras and layers in the engine
 * this is populated at runtime based on LayerComposition
 *
 * @ignore
 */
export class RenderAction {
    /** @type {import('../layer.js').Layer|null} */
    layer: import('../layer.js').Layer | null;
    transparent: boolean;
    camera: any;
    /**
     * render target this render action renders to (taken from either camera or layer)
     *
     * @type {import('../../platform/graphics/render-target.js').RenderTarget|null}
     */
    renderTarget: import('../../platform/graphics/render-target.js').RenderTarget | null;
    lightClusters: any;
    clearColor: boolean;
    clearDepth: boolean;
    clearStencil: boolean;
    triggerPostprocess: boolean;
    firstCameraUse: boolean;
    lastCameraUse: boolean;
    /** @type {import('../../platform/graphics/bind-group.js').BindGroup[]} */
    viewBindGroups: import('../../platform/graphics/bind-group.js').BindGroup[];
    useCameraPasses: boolean;
    destroy(): void;
    setupClears(camera: any, layer: any): void;
}
