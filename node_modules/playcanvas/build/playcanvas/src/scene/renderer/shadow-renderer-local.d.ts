/**
 * @ignore
 */
export class ShadowRendererLocal {
    constructor(renderer: any, shadowRenderer: any);
    shadowLights: any[];
    /** @type {import('./renderer.js').Renderer} */
    renderer: import('./renderer.js').Renderer;
    /** @type {import('./shadow-renderer.js').ShadowRenderer} */
    shadowRenderer: import('./shadow-renderer.js').ShadowRenderer;
    /** @type {import('../../platform/graphics/graphics-device.js').GraphicsDevice} */
    device: import('../../platform/graphics/graphics-device.js').GraphicsDevice;
    cull(light: any, comp: any, casters?: any): void;
    prepareLights(shadowLights: any, lights: any): any;
    /**
     * Prepare render passes for rendering of shadows for local non-clustered lights. Each shadow face
     * is a separate render pass as it renders to a separate render target.
     */
    buildNonClusteredRenderPasses(frameGraph: any, localLights: any): void;
}
